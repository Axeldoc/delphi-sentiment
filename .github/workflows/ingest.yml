name: YouTube Sentiment Ingest

on:
  schedule:
    - cron: '*/30 * * * *'   # every 30 minutes
  workflow_dispatch: {}       # allow manual runs

jobs:
  run-ingest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install requests psycopg2-binary nltk pandas tqdm

      - name: Download NLTK data
        run: |
          source .venv/bin/activate
          python -m nltk.downloader vader_lexicon

      # ---------- Diagnostics (safe & simple) ----------
      - name: Check required secrets are present
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
          YT_VIDEO_ID: ${{ secrets.YT_VIDEO_ID }}
        run: |
          set -e
          if [ -z "${SUPABASE_DB_URL}" ]; then echo "❌ Missing SUPABASE_DB_URL"; exit 1; else echo "✅ Has SUPABASE_DB_URL"; fi
          if [ -z "${YT_API_KEY}" ]; then echo "❌ Missing YT_API_KEY"; exit 1; else echo "✅ Has YT_API_KEY"; fi
          if [ -z "${YT_VIDEO_ID}" ]; then echo "❌ Missing YT_VIDEO_ID"; exit 1; else echo "✅ YT_VIDEO_ID=${YT_VIDEO_ID}"; fi

      - name: DNS resolve DB host
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          python - <<'PY'
          import os, socket
          u=os.environ['SUPABASE_DB_URL']
          host=u.split('@')[1].split(':')[0]
          print("DB host:", host)
          print("IP:", socket.gethostbyname(host))
          PY

      - name: Test DB connection
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          source .venv/bin/activate
          python - <<'PY'
          import os, psycopg2
          try:
              conn = psycopg2.connect(os.environ["SUPABASE_DB_URL"], connect_timeout=10, sslmode="require")
              print("✅ DB connection OK")
              conn.close()
          except Exception as e:
              print("❌ DB connection failed:", e)
              raise
          PY
      # ---------- End diagnostics ----------

      - name: Run ingest script
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
          YT_VIDEO_ID: ${{ secrets.YT_VIDEO_ID }}
        run: |
          source .venv/bin/activate
          python scripts/ingest_to_supabase.py
