name: YouTube Sentiment Ingest

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch: {}

jobs:
  run-ingest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install requests psycopg2-binary nltk pandas tqdm

      - name: Download NLTK data
        run: |
          source .venv/bin/activate
          python -m nltk.downloader vader_lexicon

      # ---------- Diagnostics (safe) ----------
      - name: Show which env vars are set (masked)
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
          YT_VIDEO_ID: ${{ secrets.YT_VIDEO_ID }}
        run: |
          echo "Has SUPABASE_DB_URL? $([ -n \"$SUPABASE_DB_URL\" ] && echo yes || echo no)"
          echo "Has YT_API_KEY?      $([ -n \"$YT_API_KEY\" ] && echo yes || echo no)"
          echo "YT_VIDEO_ID value:   ${YT_VIDEO_ID}"

      - name: DNS resolve DB host
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          set -e
          host=$(python - <<'PY'
import os
u=os.environ['SUPABASE_DB_URL']
print(u.split('@')[1].split(':')[0])
PY
)
          echo "DB host: $host"
          getent hosts "$host" || (echo "DNS resolution failed" && exit 1)

      - name: Test DB connection
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          source .venv/bin/activate
          python - <<'PY'
import os, psycopg2
try:
    conn = psycopg2.connect(os.environ["SUPABASE_DB_URL"], connect_timeout=10, sslmode="require")
    print("✅ DB connection OK")
    conn.close()
except Exception as e:
    print("❌ DB connection failed:")
    print(e)
    raise
PY
      # ---------- End diagnostics ----------

      - name: Run ingest script
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
          YT_VIDEO_ID: ${{ secrets.YT_VIDEO_ID }}
        run: |
          source .venv/bin/activate
          python scripts/ingest_to_supabase.py
